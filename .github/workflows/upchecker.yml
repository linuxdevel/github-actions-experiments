name: Check URLs

on:
  schedule:
    - cron: "*/15 * * * *"

jobs:
  check-urls:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Ensure OpenSSL is installed (Ubuntu)
        run: sudo apt-get update && sudo apt-get install -y openssl
      - name: Check URLs
        run: |
          urls=("https://pki.esign.bankid.no/bankidrootcag2.crl" 
                "https://pki.esign.bankid.no/bankidrootcag2.crt"
                "https://pki.esign.bankid.no/bankidbankaxeptca1a.crt"
                "https://pki.esign.bankid.no/bankidbankaxeptca1a.crl"
                "https://pki.esign.bankid.no/bankidbankaxeptqtsa-ca1a.crt"
                "https://pki.esign.bankid.no/bankidbankaxeptqtsa-ca1a.crl")
                
          for url in "${urls[@]}"; do
            if [[ "$url" == *.crl ]]; then
              echo "Checking CRL"
              # Download and check CRL validity
              if ! curl -s -f -o mycrl.crl "$url"; then
                echo "Failed to download CRL $url"
                exit 1
              fi
              
              next_update=$(openssl crl -in mycrl.crl -noout -nextupdate | cut -d= -f2)
              current_date=$(date -u +"%Y%m%d%H%M%SZ")
              
              if [[ "$current_date" > "$(date -u -d "$next_update" +"%Y%m%d%H%M%SZ")" ]]; then
                echo "CRL $url is expired (next update: $next_update)"
                exit 1
              else
                echo "CRL $url is valid (next update: $next_update)"
              fi
            else
              # Check HTTP status
              echo "Checking certificate"
              status=$(curl -o /dev/null -s -w "%{http_code}\n" "$url")
              if [ "$status" -ne 200 ]; then
                echo "URL $url is down (status code: $status)"
                exit 1
              else
                echo "URL $url is up (status code: $status)"
              fi
            fi
          done      
#          - name: Send email on failure
#        if: failure()
#        uses: actions/github-script@v6
#        with:
#          script: |
#            const sgMail = require('@sendgrid/mail');
#            sgMail.setApiKey(process.env.SENDGRID_API_KEY);
#            const msg = {
#              to: 'team@example.com',
#              from: 'alert@example.com',
#              subject: 'GitHub Action Failed',
#              text: `The workflow run has failed. Check the details at ${github.context.payload.repository.html_url}/actions/runs/${github.runId}`,
#            };
#            sgMail.send(msg);
#        env:
#          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
